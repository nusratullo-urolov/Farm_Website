# Generated by Django 5.0.6 on 2024-05-21 02:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdCombine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_name', models.CharField(max_length=255)),
                ('c_quantity', models.PositiveIntegerField()),
                ('c_price', models.PositiveIntegerField()),
                ('c_driver', models.BooleanField(default=False)),
                ('c_quickly', models.BooleanField(default=False)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AdEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('e_name', models.CharField(max_length=255)),
                ('e_quantity', models.PositiveIntegerField()),
                ('e_price', models.PositiveIntegerField()),
                ('e_quickly', models.BooleanField(default=False)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AdFarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(max_length=255)),
                ('f_quantity', models.PositiveIntegerField()),
                ('f_price', models.PositiveIntegerField()),
                ('f_quickly', models.BooleanField(default=False)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AdMineral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_name', models.CharField(max_length=255)),
                ('m_price', models.PositiveIntegerField()),
                ('m_weight', models.PositiveIntegerField()),
                ('m_quickly', models.BooleanField(default=False)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AdTractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('t_name', models.CharField(max_length=255)),
                ('t_quantity', models.PositiveIntegerField()),
                ('t_price', models.PositiveIntegerField()),
                ('t_driver', models.BooleanField(default=False)),
                ('t_quickly', models.BooleanField(default=False)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AdWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w_name', models.CharField(max_length=255)),
                ('w_quantity', models.PositiveIntegerField()),
                ('w_price', models.PositiveIntegerField()),
                ('w_quickly', models.BooleanField(default=False)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Combine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='media/')),
                ('condition', models.CharField(choices=[('Рабочий', 'Рабочий'), ('Нерабочий', 'Нерабочий')], default='Рабочий', max_length=15)),
                ('url', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Комбайн',
                'verbose_name_plural': 'Комбайны',
            },
        ),
        migrations.CreateModel(
            name='MineralEndorsements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='media/')),
                ('weight', models.CharField(max_length=25)),
                ('url', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Минеральные удобрение',
                'verbose_name_plural': 'Минеральные удобрение',
            },
        ),
        migrations.CreateModel(
            name='OtherEquipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('quantity', models.IntegerField()),
                ('condition', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Другие обородувания',
                'verbose_name_plural': 'Другие обородувания',
            },
        ),
        migrations.CreateModel(
            name='Tractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='media/')),
                ('condition', models.CharField(choices=[('Рабочий', 'Рабочий'), ('Нерабочий', 'Нерабочий')], default='Рабочий', max_length=15)),
                ('url', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Трактор',
                'verbose_name_plural': 'Тракторы',
            },
        ),
        migrations.CreateModel(
            name='Workers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('job_title', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='media/')),
                ('age', models.PositiveIntegerField()),
                ('salary', models.IntegerField()),
                ('url', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Работники',
                'verbose_name_plural': 'Работники',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
